[gd_scene load_steps=13 format=2]

[sub_resource type="RectangleShape2D" id=1]

[sub_resource type="VisualShaderNodeVectorOp" id=10]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 50, 0, 0 ), 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeColorOp" id=11]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 50, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=12]
output_port_for_preview = 0
constant = Color( 0.374857, 0.0625982, 0.410156, 1 )

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
output_port_for_preview = 0
function = 1

[sub_resource type="VisualShaderNodeInput" id=14]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=15]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShader" id=16]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Color:4
	vec3 n_out4p0 = vec3(0.374857, 0.062598, 0.410156);
	float n_out4p1 = 1.000000;

// Input:6
	float n_out6p0 = TIME;

// ScalarFunc:5
	float n_out5p0 = cos(n_out6p0);

// ScalarOp:8
	float n_in8p1 = 0.50000;
	float n_out8p0 = n_out5p0 * n_in8p1;

// VectorOp:10
	vec3 n_in10p0 = vec3(50.00000, 0.00000, 0.00000);
	vec3 n_out10p0 = n_in10p0 + vec3(n_out8p0);

// ColorOp:3
	vec3 n_out3p0 = min(n_out4p0, n_out10p0);

// Output:0
	COLOR.rgb = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -340.973, 31.6667 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1260, 160 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( 900, 120 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( -400, 120 )
nodes/fragment/5/node = SubResource( 13 )
nodes/fragment/5/position = Vector2( -160, 580 )
nodes/fragment/6/node = SubResource( 14 )
nodes/fragment/6/position = Vector2( -440, 520 )
nodes/fragment/8/node = SubResource( 15 )
nodes/fragment/8/position = Vector2( 20, 220 )
nodes/fragment/10/node = SubResource( 10 )
nodes/fragment/10/position = Vector2( 440, 260 )
nodes/fragment/connections = PoolIntArray( 4, 0, 3, 0, 6, 0, 5, 0, 3, 0, 0, 0, 5, 0, 8, 0, 8, 0, 10, 1, 10, 0, 3, 1 )

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 16 )

[sub_resource type="QuadMesh" id=7]
size = Vector2( 20, 20 )

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0.012, 1 )
colors = PoolColorArray( 0.270588, 0.215686, 0.403922, 1, 0.129412, 0.0980392, 0.313726, 1 )

[sub_resource type="GradientTexture" id=9]
gradient = SubResource( 8 )

[node name="Wall" type="StaticBody2D"]
position = Vector2( 19.4781, 334.122 )
scale = Vector2( 2, 40 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 1 )

[node name="MeshInstance2D" type="MeshInstance2D" parent="CollisionShape2D"]
material = SubResource( 17 )
mesh = SubResource( 7 )
texture = SubResource( 9 )
